{"version":3,"sources":["Components/Tabs/TabComponent.js","Components/HOC/Layout.js","Components/Grid/Grid.js","config/Config.js","Components/InputControls/InputControls.js","Components/Tasks/AddTask.js","Components/Tabs/TabsComponent.js","actions/action-get-tableData.js","actions/actionTypes.js","actions/action-add-task.js","Containers/Tabs/TabsContainer.js","App.js","serviceWorker.js","Store/reducer.js","index.js"],"names":["tab","props","className","selected","onClick","openTab","tabName","layout","children","Grid","getTableHeader","tableHeader","map","el","index","key","header","getTableData","tableData","fieldName","title","description","createdAt","dueDate","priority","Layout","this","Component","settings","name","labelName","inputType","fieldValue","Date","id","inputControls","inputElement","type","required","value","onChange","fieldValueChange","options","config","addTask","AddTask","state","showModal","formValues","openModal","resetFormValues","setState","closeModal","handleChange","event","inputName","updateFormValues","target","handleSubmit","preventDefault","gridData","selectedTabName","getModal","InputControls","labelAddNewTask","onSubmit","TabsComponent","tabNames","updateTabNames","configData","Object","assign","Config","renderTabs","TabComponent","gridHeaderData","payload","grid","formatTaskDetails","taskDetails","formatDate","updateGridData","allTasks","gridTableData","push","pending","inputDate","date","getMonth","slice","getDate","getFullYear","join","updatedTaskDetails","connect","dispatch","App","TabsContainer","Boolean","window","location","hostname","match","initialState","reducer","newState","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.504f8c33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst tab = (props) => (\r\n       <button className={props.selected ?\"tablinks active\":\"tablinks\" } onClick={props.openTab}>{props.tabName}</button>\r\n     )\r\n\r\nexport default tab;","const layout=(props)=>props.children;\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport Layout from '../HOC/Layout';\r\nclass Grid extends Component {\r\n\r\n    getTableHeader = () => {\r\n        let tableHeader = this.props.tableHeader.map((el,index) => {\r\n            return (\r\n                <th key={index}>{el.header}</th>\r\n            )\r\n        });\r\n        return <tr>{tableHeader}</tr>\r\n\r\n    }\r\n    getTableData=()=>{\r\n        let tableData = this.props.tableData.map((el,index) => {\r\n            return (\r\n               <tr key={index}><td>{el.fieldName}</td>\r\n                <td>{el.title}</td>\r\n                <td>{el.description}</td>\r\n                <td>{el.createdAt}</td>\r\n                <td>{el.dueDate}</td>\r\n                <td>{el.priority}</td></tr>\r\n            )\r\n        });\r\n        return tableData;\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <table>\r\n                    <thead>{this.getTableHeader()}</thead>\r\n                   <tbody>{this.getTableData()}</tbody>\r\n                </table>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;","const settings = {\r\n    \"grid\": {\r\n        \"gridHeaderData\": [\r\n            { header: \"Currrent State\" },\r\n            { header: \"Title\" },\r\n            { header: \"Description\" },\r\n            { header: \"createdAt\" },\r\n            { header: \"dueDate\" },\r\n            { header: \"priority\" }\r\n        ],\r\n        \"allTasks\": {\r\n            \"gridTableData\": [\r\n                { fieldName: \"Open\", title: \"Title1\", description: \"description1\", createdAt: \"01/01/2019\", dueDate: \"01/02/2019\", priority: \"Low\" },\r\n                { fieldName: \"Done\", title: \"Title2\", description: \"description2\", createdAt: \"02/01/2019\", dueDate: \"02/02/2019\", priority: \"High\" },\r\n                { fieldName: \"Open\", title: \"Title3\", description: \"description3\", createdAt: \"03/01/2019\", dueDate: \"03/02/2019\", priority: \"Medium\" },\r\n                { fieldName: \"Done\", title: \"Title4\", description: \"description4\", createdAt: \"04/01/2019\", dueDate: \"04/02/2019\", priority: \"low\" },\r\n                { fieldName: \"Pending\", title: \"Title5\", description: \"description5\", createdAt: \"05/01/2019\", dueDate: \"05/02/2019\", priority: \"Medium\" }\r\n            ]\r\n        },\r\n        \"completed\": {\r\n            \"gridTableData\": [\r\n                { fieldName: \"Done\", title: \"Title2\", description: \"description2\", createdAt: \"02/01/2019\", dueDate: \"02/02/2019\", priority: \"High\" },\r\n                { fieldName: \"Done\", title: \"Title4\", description: \"description4\", createdAt: \"04/01/2019\", dueDate: \"04/02/2019\", priority: \"low\" }\r\n\r\n            ]\r\n        },\r\n        \"pending\": {\r\n            \"gridTableData\": [\r\n                { fieldName: \"Pending\", title: \"Title5\", description: \"description5\", createdAt: \"05/01/2019\", dueDate: \"05/02/2019\", priority: \"Medium\" }\r\n\r\n            ]\r\n        }\r\n\r\n    },\r\n    \"addTask\":{\r\n        \"inputControls\":[\r\n            {name:\"title\",labelName:\"Summary:\",inputType:\"input\",fieldValue:\"title\"},\r\n            {name:\"description\",labelName:\"Description:\",inputType:\"textArea\",fieldValue:\"description\"},\r\n            {name:\"priority\",labelName:\"Priority:\",inputType:\"dropDown\",fieldValue:\"priority\"},\r\n            {name:\"dueDate\",labelName:\"Due Date:\",inputType:\"datePicker\",fieldValue:\"dueDate\"}\r\n        ],\r\n        \"formValues\": {\r\n            \"title\": \"\",\r\n            \"description\": \"\",\r\n            \"priority\": \"None\",\r\n            \"dueDate\": new Date(),\r\n            \"fieldName\":\"Pending\",\r\n            \"createdAt\":new Date()\r\n        },\r\n        \"options\":[\"None\",\"Low\",\"Medium\",\"High\"],\r\n        \"labelAddNewTask\":\"Add New Task\"\r\n    },\r\n    \"tabs\":{\r\n        \"unselectedTabNames\":[\r\n            { id: 0,key:\"allTasks\", name: \"All tasks\", selected: false }, { id: 1,key:\"completed\", name: \"Completed\", selected: false },\r\n            { id: 2,key:\"pending\", name: \"Pending\", selected: false }\r\n        ]\r\n    },\r\n    \r\n    \r\n}\r\n\r\nexport default settings;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nconst inputControls = (props) => {\r\n    let inputElement = null;\r\n\r\n    switch (props.inputType) {\r\n        case \"input\":\r\n            inputElement = <label>{props.labelName}\r\n                <input type=\"text\" name={props.fieldName} required value={props.fieldValue} onChange={props.fieldValueChange} />\r\n            </label>\r\n            break;\r\n        case \"textArea\":\r\n            inputElement = <label>{props.labelName}\r\n                <textarea value={props.fieldValue} required name={props.fieldName} onChange={props.fieldValueChange} />\r\n            </label>\r\n            break;\r\n        case \"dropDown\":\r\n            let options = props.config.addTask.options.map((el,index) =>\r\n                <option key={index} value={el}>{el}</option>\r\n            );\r\n            inputElement = <label>{props.labelName}\r\n                <select value={props.fieldValue} required name={props.fieldName} onChange={props.fieldValueChange}>\r\n                    {options}\r\n                </select>\r\n            </label>\r\n            break;\r\n        case \"datePicker\":\r\n            inputElement = <label>{props.labelName}<DatePicker\r\n                name={props.fieldName}\r\n                required={true}\r\n                onChange={props.fieldValueChange}\r\n                value={props.fieldValue}\r\n            /> </label>\r\n            break;\r\n        default:\r\n            inputElement = <div />;\r\n    }\r\n    return inputElement;\r\n}\r\n\r\nexport default inputControls;","import React, { Component } from 'react';\r\nimport Layout from '../HOC/Layout';\r\nimport InputControls from '../InputControls/InputControls';\r\n\r\nclass AddTask extends Component {\r\n    state = {\r\n        showModal: false,\r\n        formValues: this.props.config.addTask.formValues\r\n    }\r\n    openModal = () => {\r\n        const resetFormValues= {\r\n            \"title\": \"\",\r\n            \"description\": \"\",\r\n            \"priority\": \"None\",\r\n            \"dueDate\": new Date(),\r\n            \"fieldName\":\"Pending\",\r\n            \"createdAt\":new Date()\r\n        };\r\n        this.setState({ showModal: true,formValues:resetFormValues });\r\n       \r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n    handleChange = (event, inputName) => {\r\n        let updateFormValues = this.state.formValues;\r\n        if (inputName === \"dueDate\") {\r\n            updateFormValues[inputName] = event;\r\n        }\r\n        else {\r\n            updateFormValues[inputName] = event.target.value\r\n        }\r\n        this.setState({ formValues: updateFormValues })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addTask(this.state.formValues,this.props.gridData);\r\n       this.setState({showModal:false});\r\n       this.props.openTab(null,this.props.selectedTabName);\r\n    }\r\n    getModal = () => {\r\n        let inputControls = this.props.config.addTask.inputControls.map((el, index) => {\r\n            return <Layout key={index}><InputControls labelName={el.labelName} fieldName={el.name} inputType={el.inputType} fieldValueChange={(event) => this.handleChange(event, el.name)}\r\n                fieldValue={this.state.formValues[el.fieldValue]} config={this.props.config}/><br /></Layout>\r\n        })\r\n        return (\r\n            <div id=\"myModal\" className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <h1>{this.props.config.addTask.labelAddNewTask}</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {inputControls}\r\n                        <br />\r\n                        <input type=\"button\" value=\"Cancel\" onClick={() => this.closeModal()} />\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <i className=\"fa fa-plus-circle addTask\" onClick={() => this.openModal()} />\r\n                {this.state.showModal && this.getModal()}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react';\r\nimport TabComponent from './TabComponent';\r\nimport Layout from '../HOC/Layout';\r\nimport Grid from '../Grid/Grid';\r\nimport Config from '../../config/Config';\r\nimport AddTask from '../Tasks/AddTask';\r\nclass TabsComponent extends Component {\r\n\r\n    state = {\r\n        tabNames: [\r\n            { id: 0,key:\"allTasks\", name: \"All tasks\", selected: true }, { id: 1,key:\"completed\", name: \"Completed\", selected: false },\r\n            { id: 2,key:\"pending\", name: \"Pending\", selected: false }\r\n        ],\r\n        selectedTabName:{ id: 0,key:\"allTasks\", name: \"All tasks\", selected: false }\r\n    }\r\n    openTab = (event=null, tabName) => {\r\n        let updateTabNames = [\r\n            { id: 0,key:\"allTasks\", name: \"All tasks\", selected: false }, { id: 1,key:\"completed\", name: \"Completed\", selected: false },\r\n            { id: 2,key:\"pending\", name: \"Pending\", selected: false }\r\n        ];\r\n        updateTabNames[tabName.id][\"selected\"] = true;\r\n        this.setState({ tabNames: updateTabNames,selectedTabName:tabName});\r\n        this.props.getTableData(tabName.key,this.props.gridData);\r\n    }\r\n    render() {\r\n        let configData=Object.assign({}, Config);\r\n        const renderTabs = this.state.tabNames.map((tab) => {\r\n            return (\r\n                <TabComponent key={tab.id} tabName={tab.name} selected={tab.selected} openTab={(event)=>this.openTab(event, tab)} />\r\n            )\r\n        });\r\n      return (\r\n            <Layout>\r\n                <div className=\"tab\">\r\n                    {renderTabs}\r\n                </div>\r\n                <Grid tableData={this.props.tableData} tableHeader={this.props.gridData.gridHeaderData}/>\r\n                <AddTask gridData={this.props.gridData} config={configData}  addTask={this.props.addTask}\r\n                selectedTabName={this.state.selectedTabName} openTab={(event,tabName)=>this.openTab(event,tabName)}/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nexport default TabsComponent; \r\n","import * as actionTypes from './actionTypes';\r\nimport Config from '../config/Config';\r\nconst getTableData = (tabName,gridData) => {\r\n let configData={...Config};\r\nconst updateTable=configData.grid[tabName][\"gridTableData\"]\r\nreturn {\r\n        type: actionTypes.GET_TABLE_DATA_SUCCESS, \r\n        payload: { tableData: updateTable }\r\n    };\r\n}\r\n\r\nexport default getTableData;","export const ADD_TASK_SUCCESS=\"ADD-TASK-SUCCESS\";\r\nexport const GET_TABLE_DATA_SUCCESS=\"GET_TABLE_DATA_SUCCESS\"","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst addTask = (taskDetails, gridData) => {\r\n   let updatedTaskDetails=formatTaskDetails(taskDetails);\r\n    let updatedGridData = updateGridData(gridData, updatedTaskDetails);\r\n    return {\r\n        type: actionTypes.ADD_TASK_SUCCESS,\r\n        payload: { gridData: updatedGridData }\r\n    }\r\n}\r\n\r\nconst formatTaskDetails=(taskDetails)=>{\r\n    let dueDate = taskDetails.dueDate;\r\n    let createdAt=taskDetails.createdAt;\r\n    taskDetails[\"dueDate\"] = formatDate(dueDate);\r\n    taskDetails[\"createdAt\"]=formatDate(createdAt);\r\n    return taskDetails;\r\n}\r\n\r\nconst updateGridData = (gridData, taskDetails) => {\r\n    gridData.allTasks.gridTableData.push(taskDetails);\r\n    gridData.pending.gridTableData.push(taskDetails);\r\n    return gridData;\r\n}\r\nconst formatDate = (inputDate) => {\r\n    var date = new Date(inputDate),\r\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n        day = (\"0\" + date.getDate()).slice(-2);\r\n    return [mnth, day, date.getFullYear()].join(\"/\");\r\n}\r\n\r\n\r\n\r\nexport default addTask;\r\n","import { connect } from 'react-redux';\r\nimport TabsComponent from '../../Components/Tabs/TabsComponent';\r\nimport getTableData from '../../actions/action-get-tableData';\r\nimport addTask from '../../actions/action-add-task';\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tableData: state.tableData,\r\n        gridData:state.gridData\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n     getTableData: (tabName,gridData) => dispatch(getTableData(tabName,gridData)),\r\n     addTask: (taskDetails,gridData) => dispatch(addTask(taskDetails,gridData))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TabsComponent); ","import React, { Component } from 'react';\nimport './App.css';\nimport TabsContainer from './Containers/Tabs/TabsContainer';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TabsContainer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport Config from '../config/Config';\r\n\r\nconst configData={...Config};\r\nconst initialState = {\r\n    tableData: configData.grid[\"allTasks\"][\"gridTableData\"],\r\n    gridData: configData.grid,\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let newState;\r\n    switch (action.type) {\r\n        case actionTypes.GET_TABLE_DATA_SUCCESS:\r\n             newState = { ...state };\r\n            newState.tableData = action.payload.tableData;\r\n            return newState;\r\n        case actionTypes.ADD_TASK_SUCCESS:\r\n             newState = { ...state };\r\n            newState.gridData = action.payload.gridData;\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from '../src/Store/reducer';\n\nconst store=createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst app=(\n  <Provider store={store}>\n    <React.StrictMode>\n    <App/>\n    </React.StrictMode>\n    \n  </Provider>\n)\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}